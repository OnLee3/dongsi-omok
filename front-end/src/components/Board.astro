---
import { BOARD_SIZE, ALPHABETS } from '@dongsi-omok/shared';
---

<omok-board>
  {
    Array.from({ length: BOARD_SIZE }, (_, row) =>
      ALPHABETS.slice(0, BOARD_SIZE).map((col) => (
        <button
          data-row={row}
          data-col={col}
          aria-label={`row:${row + 1} col:${col}`}
        >
          {(row === 3 || row === 9 || row === 15) &&
          (col === 'D' || col === 'J' || col === 'P') ? (
            <span class="flower-point" />
          ) : null}
        </button>
      )),
    )
  }
  <border-beam></border-beam>
</omok-board>
<style define:vars={{ boardSize: BOARD_SIZE }}>
  @keyframes border-beam {
    100% {
      offset-distance: 100%;
    }
  }
  @keyframes pulse {
    0%,
    100% {
      box-shadow: 0 0 0 0 burlywood;
    }
    50% {
      box-shadow: 0 0 0 4px hsla(334, 82%, 72%, 20%);
    }
  }
  omok-board {
    width: 100%;
    max-width: 600px;
    aspect-ratio: 1;
    display: grid;
    grid-template-columns: repeat(var(--boardSize), 1fr);
    grid-template-rows: repeat(var(--boardSize), 1fr);
    background-color: burlywood;
    border-radius: 8px;
    position: relative;
  }
  border-beam {
    pointer-events: none;
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    border: 2px solid transparent;
    border-radius: inherit;

    &::after {
      content: '';
      aspect-ratio: 1;
      position: absolute;
    }

    &.loading {
      mask-clip: padding-box, border-box !important;
      mask-composite: intersect !important;
      mask: linear-gradient(transparent, transparent),
        linear-gradient(white, white);
      &::after {
        width: 100%;
        background: linear-gradient(
          to left,
          hsl(60, 100%, 50%),
          hsl(30, 100%, 50%),
          transparent
        );
        animation: border-beam 6s infinite linear;
        offset-anchor: 90% 50%;
        offset-path: rect(0 auto auto 0 round 600px);
      }
    }
    &.active {
      animation: pulse 1.5s ease-in-out infinite;
    }
  }
  .flower-point {
    pointer-events: none;
    position: absolute;
    width: 12.5%;
    height: 12.5%;
    background-color: black;
    border-radius: 50%;
    left: 52%;
    top: 52%;
    transform: translate(-52%, -52%);
    padding: 0;
    margin: 0;
  }
  button {
    margin: 0;
    padding: 0;
    background-color: transparent;
    border: none;
    position: relative;
    &:not(:disabled) {
      cursor: pointer;
    }

    &.item {
      border-radius: 50%;
      &.white {
        background-color: white;
        .flower-point {
          z-index: -2;
        }
        &::before,
        &::after {
          z-index: -1;
        }
      }
      &.black {
        background-color: black;
      }
      &.prohibit {
        background-color: red;
        border-radius: 50%;
      }
      &.plan {
        opacity: 0.5;
      }
    }

    &:hover:not(:disabled) {
      background-color: hsl(30, 50%, 80%);
    }

    &:active:not(:disabled) {
      background-color: hsl(30, 50%, 88%);
    }

    &::before,
    &::after {
      content: '';
      position: absolute;
      background-color: black;
    }
    &::before {
      width: 1px;
      height: 100%;
      top: 0;
    }
    &::after {
      height: 1px;
      width: 100%;
      left: 0;
    }
    &[data-row='0'] {
      &::before {
        top: 50%;
        height: 50%;
      }
    }
    &[data-row='18'] {
      &::before {
        height: 50%;
      }
    }
    &[data-col='A'] {
      &::after {
        left: 50%;
        width: 50%;
      }
    }
    &[data-col='S'] {
      &::after {
        width: 50%;
      }
    }
    &:last-child::before {
      height: 54%;
    }
  }
</style>
